// Generated by Xata Codegen 0.21.0. Please do not edit.
import {
  buildClient,
  type BaseClientOptions,
  type SchemaInference,
  type XataRecord,
} from "@xata.io/client"

const tables = [
  {
    name: "product",
    columns: [
      { name: "title", type: "string" },
      { name: "stock", type: "int", notNull: true, defaultValue: "0" },
      { name: "description", type: "text" },
      { name: "sale_price", type: "float", notNull: true, defaultValue: "0" },
      { name: "additional_images", type: "multiple" },
      {
        name: "google_category",
        type: "string",
        notNull: true,
        defaultValue: "Sporting Goods > Exercise & Fitness > Exercise Bands",
      },
      { name: "image", type: "string" },
      { name: "name", type: "string", notNull: true, defaultValue: "" },
      { name: "price", type: "int", notNull: true, defaultValue: "0" },
    ],
  },
  {
    name: "bag",
    columns: [
      { name: "product", type: "link", link: { table: "product" } },
      { name: "quantity", type: "int", notNull: true, defaultValue: "1" },
      { name: "added_at", type: "datetime" },
      { name: "client", type: "link", link: { table: "client" } },
    ],
  },
  {
    name: "client",
    columns: [
      { name: "first_name", type: "string", notNull: true, defaultValue: "" },
      { name: "last_name", type: "string", notNull: true, defaultValue: "" },
      { name: "phone_number", type: "int", notNull: true, defaultValue: "0" },
      {
        name: "email",
        type: "email",
        notNull: true,
        defaultValue: "mail@mail.mail",
      },
      { name: "DNI", type: "int", notNull: true, defaultValue: "0" },
      { name: "pronouns", type: "string" },
      { name: "user", type: "string", unique: true },
      { name: "image", type: "string" },
      { name: "phone_prefix", type: "int", notNull: true, defaultValue: "51" },
    ],
  },
  {
    name: "address",
    columns: [
      {
        name: "departamento",
        type: "string",
        notNull: true,
        defaultValue: "Callao",
      },
      { name: "provincia", type: "string", notNull: true, defaultValue: "" },
      { name: "distrito", type: "string", notNull: true, defaultValue: "" },
      { name: "direccion", type: "string", notNull: true, defaultValue: "" },
      { name: "referencias", type: "string", notNull: true, defaultValue: "" },
      { name: "preferred", type: "bool", notNull: true, defaultValue: "false" },
      { name: "client", type: "link", link: { table: "client" } },
    ],
  },
] as const

export type SchemaTables = typeof tables
export type InferredTypes = SchemaInference<SchemaTables>

export type Product = InferredTypes["product"]
export type ProductRecord = Product & XataRecord

export type Bag = InferredTypes["bag"]
export type BagRecord = Bag & XataRecord

export type Client = InferredTypes["client"]
export type ClientRecord = Client & XataRecord

export type Address = InferredTypes["address"]
export type AddressRecord = Address & XataRecord

export type DatabaseSchema = {
  product: ProductRecord
  bag: BagRecord
  client: ClientRecord
  address: AddressRecord
}

const DatabaseClient = buildClient()

const defaultOptions = {
  databaseURL: "https://fitpeak-4hlshe.us-east-1.xata.sh/db/shop",
}

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables)
  }
}

let instance: XataClient | undefined = undefined

export const getXataClient = () => {
  if (instance) return instance

  instance = new XataClient()
  return instance
}
