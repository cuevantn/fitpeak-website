// Generated by Xata Codegen 0.21.0. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "product",
    columns: [
      { name: "title", type: "string" },
      { name: "stock", type: "int", notNull: true, defaultValue: "0" },
      { name: "description", type: "text" },
      { name: "sale_price", type: "float", notNull: true, defaultValue: "0" },
      { name: "additional_images", type: "multiple" },
      {
        name: "google_category",
        type: "string",
        notNull: true,
        defaultValue: "Sporting Goods > Exercise & Fitness > Exercise Bands",
      },
      { name: "image", type: "string" },
      { name: "name", type: "string", notNull: true, defaultValue: "" },
      { name: "price", type: "int", notNull: true, defaultValue: "0" },
    ],
  },
  {
    name: "bag",
    columns: [
      { name: "user", type: "string", notNull: true, defaultValue: "" },
      { name: "product", type: "link", link: { table: "product" } },
      { name: "quantity", type: "int", notNull: true, defaultValue: "1" },
      { name: "added_at", type: "datetime" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Product = InferredTypes["product"];
export type ProductRecord = Product & XataRecord;

export type Bag = InferredTypes["bag"];
export type BagRecord = Bag & XataRecord;

export type DatabaseSchema = {
  product: ProductRecord;
  bag: BagRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: "https://fitpeak-4hlshe.us-east-1.xata.sh/db/shop",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
